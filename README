1.) How do I interpret user needs and implement them into a program? How does creating “user stories” help with this?

I can understand user needs by determining the actual issues they're having 
and outlining potential fixes to improve their experience. By focusing on 
what the user wants to do rather than just technical details user stories
help change those needs into exact, testable features. This method makes 
sure that the program adds real value and meets user expectations.

2.) How do I approach developing programs? What Agile processes do I hope to incorporate into my future development work?

When creating programs, I try to make sure that I plan thoroughly, test the
code often, and iterate. Agile techniques like sprint planning, daily 
stand-ups, and retrospectives are what encourages teamwork, the ability to 
adapt, and ongoing development. They help keep the project organized but give 
flexibility to adapt to user input or evolving goals.

3.) What does it mean to be a good team member in software development?

Being a good team member usually means taking accountability for your work, 
communicating clearly, and being respectful when working with others. It
also means being open to criticism, helping others in the team, keeping the
focus on the team's goal of creating the best possible product.
